{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","components/Notification.js","App.js","index.js"],"names":["Translation","text","FeedbackOptions","options","onIncStats","className","map","option","index","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","defaultProps","Notification","message","Counter","useState","setGood","setNeutral","setBad","Math","round","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAUA,SAASA,EAAYC,GACjB,MAAa,SAATA,EAA0B,uCACjB,YAATA,EAA6B,yDACpB,QAATA,EAAyB,sCAA7B,EAEWC,MAbS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,WAAX,OACpB,qBAAKC,UAAU,oBAAf,SACKF,EAAQG,KAAI,SAACC,EAAQC,GAClB,OAAQ,wBAAQC,KAAK,SAASC,KAAMH,EAAoBI,QAASP,EAAzD,SAAsEJ,EAAYO,IAAzCC,SCO9CI,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,gCACI,oBAAGZ,UAAU,gBAAb,mDAAsCQ,KACtC,oBAAGR,UAAU,gBAAb,qEAAyCS,KACzC,oBAAGT,UAAU,gBAAb,6CAAqCU,KACrC,oBAAGV,UAAU,gBAAb,8FAA8CW,KAC9C,oBAAGX,UAAU,gBAAb,mLAA6DY,EAA7D,WCLFC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,gCACKD,GAAS,6BAAKA,IACdC,MAITF,EAAQG,aAAe,CACnBF,MAAO,GACPC,SAAU,IAQCF,QChBTI,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,qBAAKlB,UAAU,eAAf,SACI,4BAAIkB,OAGZD,EAAaD,aAAe,CACxBE,QAAS,IAMED,QCTf,SAASE,IACL,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAYMZ,EAAQH,EAAOC,EAAUC,EACzBE,EAAqBY,KAAKC,MAAa,IAAPjB,EAAaG,GACnD,OACQ,sBAAKX,UAAU,UAAf,UACI,cAAC,EAAD,CAASc,MAAM,sGAAf,SACI,cAAC,EAAD,CACAhB,QAPA,CAAC,OAAQ,UAAW,OAQpBC,WAjBC,SAAA2B,GAEb,OADiBA,EAAEC,OAAXtB,MAEJ,IAAK,OAAQgB,EAAQb,EAAO,GAAI,MAChC,IAAK,UAAWc,EAAWb,EAAU,GAAI,MACzC,IAAK,MAAOc,EAAOb,EAAM,GAAI,MAC7B,QAAS,aAcL,cAAC,EAAD,CAASI,MAAM,+DAAf,SACKH,EAAQ,EACL,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcM,QAAQ,oHAgB/BU,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAACmB,EAAD,OC/CNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.021a3bb4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FeedbackOptions = ({options, onIncStats }) => (\r\n    <div className=\"Feedback-controls\">\r\n        {options.map((option, index) => {\r\n            return (<button type=\"button\" name={option} key={index} onClick={onIncStats}>{Translation(option)}</button>)\r\n        })}\r\n    </div>        \r\n);\r\n\r\nfunction Translation(text) {\r\n    if (text === 'good') { return \"Хорошо\" }\r\n    if (text === 'neutral') { return \"Нормально\" }\r\n    if (text === 'bad') { return \"Плохо\" }\r\n};\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div>\r\n        <p className=\"Counter-value\">Хорошо: {good}</p>\r\n        <p className=\"Counter-value\">Нормально: {neutral}</p>\r\n        <p className=\"Counter-value\">Плохо: {bad}</p>\r\n        <p className=\"Counter-value\">Вслего голосов: {total}</p>\r\n        <p className=\"Counter-value\">Процент положительных отзывов: {positivePercentage}%</p>\r\n    </div>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </div>\r\n);\r\n\r\nSection.defaultProps = {\r\n    title: \"\",\r\n    children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Notification = ({message}) => (\r\n    <div className=\"Notification\">\r\n        <p>{message}</p>\r\n    </div>        \r\n);\r\nNotification.defaultProps = {\r\n    message: \"\"\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n};\r\nexport default Notification;","import './App.css';\nimport { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nfunction Counter() {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n    \n    const incStats = e => {\n        const { name } = e.target;\n        switch (name) {\n            case 'good': setGood(good + 1); break;\n            case 'neutral': setNeutral(neutral + 1); break;\n            case 'bad': setBad(bad + 1); break;\n            default: return;\n        }\n    };\n    const options = ['good', 'neutral', 'bad'];\n    const total = good + neutral + bad;\n    const positivePercentage = Math.round(good * 100 / total);\n    return (\n            <div className=\"Counter\">\n                <Section title=\"Оставте свой отзыв.\">\n                    <FeedbackOptions\n                    options={options}\n                    onIncStats={incStats}\n                    />\n                </Section>\n                <Section title=\"Статистика\">\n                    {total > 0 ? \n                        <Statistics\n                          good={good}\n                          neutral={neutral}\n                          bad={bad}\n                          total={total}\n                          positivePercentage={positivePercentage}\n                        />\n                        :\n                        <Notification message=\"Пока что нет отзывов.\"/>\n                    }\n                </Section>\n                \n            </div>\n        );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}